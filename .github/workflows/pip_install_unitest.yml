name: pip_install_unitest
on:
  workflow_dispatch:
    inputs:
      install_prerelease:
        description: 'Check this to install the prerelease version of pyrush if available and the version is newer than formal release.'  
        type: boolean   
        required: false
        default: false


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python-version }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        # Github Actions doesn't support pairing matrix values together, let's improvise
        # https://github.com/github/feedback/discussions/7835#discussioncomment-1769026
        buildplat:
          - [ ubuntu-20.04, ubuntu-20.04 ]
          - [ macos-10.15, macosx_10 ]
          - [ macos-11, macosx_11 ]
          - [ macos-12, macosx_12 ]
          - [ windows-2019, windows-2019 ]
          - [ windows-2022, windows-2022 ]
        #        spacy doesn't compile win32
        #        python: ["cp36"] # Note: Wheels not needed for PyPy
        python-version: [ "3.6", "3.7", "3.8", "3.9","3.10.x","3.11.x"] # Note: Wheels not needed for PyPy
        # python-version: [ "3.7"]
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}   
          cache: 'pip'   
          cache-dependency-path: 'requirements.txt'

      - name: Update pip
        run: |
          python -m pip install --upgrade pip
          pip install cython pytest

      - name: Install prereleased pyrush
        if: ${{ github.event.inputs.install_prerelease == 'true' }} 
        run: |
          pip install --pre PyFastNER FastNER 
          pip install PyRuSH
          pip uninstall -y PyRuSH
          pip install --pre PyRuSH
    
      - name: Install formal released pyrush
        if: ${{ github.event.inputs.install_prerelease == 'false' }}  
        run: |
          pip install pyrush

      - name: nose tests
        run: |                            
          # ls /opt/hostedtoolcache/Python/3*/x64/lib/python*/site-packages/conf
          python -c "import shutil;shutil.rmtree('PyRuSH')"
          python -c "import shutil;shutil.rmtree('conf')"
          ls
          python --version
          pytest


  
